@using QEBSPEditor.Models
@using QEBSPEditor.Models.BSPFiles
@using Tewr.Blazor.FileReader
@inject DialogService DialogService
@inject IFileReaderService FileReaderService


<div>

    <div class="@(_loading ? "visually-hidden" : "")">
        <input @ref="_fileInputReference" type="file" @onchange="@(_ => LoadAsync())" />
    </div>

    @if (_loading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }

    @if (!string.IsNullOrEmpty(_error))
    {
        <div class="text-danger">
            @_error
        </div>
    }
</div>


@code {
    private bool _loading;
    private string? _error;
    private ElementReference _fileInputReference;


    private async Task LoadAsync()
    {
        _loading = true;
        StateHasChanged();
        try
        {
            var file = (await FileReaderService.CreateReference(_fileInputReference).EnumerateFilesAsync()).FirstOrDefault();

            if (file is null)
                return;

            IBSPFile bsp;
            using (var memoryStream = await file.CreateMemoryStreamAsync(4096))
            {
                try
                {
                    bsp = BSPFiles.Load(memoryStream);
                }
                catch (InvalidDataException ex)
                {
                    _error = $"Failed to load: {ex.Message}";
                    return;
                }
                catch (Exception ex)
                {
                    _error = $"Failed to load: {ex}";
                    return;
                }
            }

            DialogService.Close(bsp);
        }
        finally
        {
            _loading = false;
            StateHasChanged();
        }
    }

    public static async Task<IBSPFile> OpenAsync(DialogService dialogService)
    {
        return (IBSPFile)await dialogService.OpenAsync<BSPLoadDialog>("Open bsp", new() { }, new() { CloseDialogOnEsc = true, ShowClose = true });
    }
}