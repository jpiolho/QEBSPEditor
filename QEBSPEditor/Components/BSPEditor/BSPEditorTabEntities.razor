@using QEBSPEditor.Core.EntParsing;
@using QEBSPEditor.Models.BSPFiles;
@using CurrieTechnologies.Razor.SweetAlert2;
@inject ApplicationSettingsService ApplicationSettingsService
@inject IJSRuntime JSRuntime

<div class="d-flex flex-column h-100">
    <RadzenCard class="mt-2 flex-grow-1">
        <RadzenTabs @ref="_tabs" class="h-100" RenderMode="TabRenderMode.Server" @bind-SelectedIndex="_selectedTab">
            <Tabs>
                <RadzenTabsItem @ref="_tabItemSource" Text="Source">
                    <RadzenMenu>
                        <RadzenMenuItem Text="Add Entity" Icon="add_circle" Click="AddEntity" />
                        <RadzenMenuItem Text="Prettify" Icon="format_indent_increase" Click="() => BSP.Entities = EntTools.Prettify(BSP.Entities)" />
                        <RadzenMenuItem Text="Minify" Icon="minimize" Click="() => BSP.Entities = EntTools.Minify(BSP.Entities)" />
                    </RadzenMenu>

                    <div class="d-flex h-100">
                        <RadzenTextArea @ref="_area"
                                        @bind-Value="BSP.Entities"
                                        class="w-100 flex-1" Style="font-family: Consolas; white-space: pre; overflow-wrap: normal; overflow-x: scroll;" />
                    </div>
                </RadzenTabsItem>
                <RadzenTabsItem @ref="_tabItemUI" Text="UI">
                    <BSPEditorTabEntitiesUI BSP="BSP" />
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>

    </RadzenCard>

</div>

@code {
    [Parameter] public IBSPFileEntities BSP { get; set; } = null!;

    private RadzenTabsItem? _tabItemUI;
    private RadzenTabsItem? _tabItemSource;
    private RadzenTabs? _tabs;
    private RadzenTextArea? _area = null!;
    private bool _moveCaret = false;
    private int _selectedTab;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            // Automatically the right tab
            _selectedTab = ApplicationSettingsService.Settings.EntitiesPreferSource ? _tabItemSource!.Index : _tabItemUI!.Index;
            StateHasChanged();
        }

        if (_moveCaret)
        {
            await JSRuntime.InvokeVoidAsync("setTextareaSelection", _area!.Element, BSP.Entities.Length - 3);
            _moveCaret = false;
        }
    }

    private void AddEntity()
    {
        BSP.Entities += "\n{\n  \"classname\" \"\"\n}";
        _moveCaret = true;
    }
}