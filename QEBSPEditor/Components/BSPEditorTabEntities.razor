@using QEBSPEditor.Core.EntParsing;
@using QEBSPEditor.Models.BSPFiles;
@inject ApplicationSettingsService ApplicationSettingsService
@inject IJSRuntime JSRuntime

<div class="d-flex flex-column h-100">
    <RadzenCard class="mt-2 flex-grow-1">
        <RadzenMenu>
            <RadzenMenuItem Text="Add Entity" Icon="add_circle" Click="AddEntity" />
            <RadzenMenuItem Text="Prettify" Icon="format_indent_increase" Click="() => BSP.Entities = EntTools.Prettify(BSP.Entities)" />
            <RadzenMenuItem Text="Minify" Icon="minimize" Click="() => BSP.Entities = EntTools.Minify(BSP.Entities)" />
        </RadzenMenu>

        <div class="d-flex h-100">
            <RadzenTextArea @ref="_area"
                            @bind-Value="BSP.Entities"
                            class="w-100 flex-1" Style="font-family: Consolas; white-space: pre; overflow-wrap: normal; overflow-x: scroll;" />
        </div>
    </RadzenCard>

</div>

@code {
    [Parameter] public IBSPFile BSP { get; set; } = null!;

    private RadzenTextArea? _area = null!;
    private bool _preventKeyDownPropagation;
    private bool _moveCaret = false;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_moveCaret)
        {
            await JSRuntime.InvokeVoidAsync("setTextareaSelection", _area!.Element, BSP.Entities.Length - 3);
            _moveCaret = false;
        }
    }

    private void AddEntity()
    {
        BSP.Entities += "\n{\n  \"classname\" \"\"\n}";
        _moveCaret = true;
    }
}