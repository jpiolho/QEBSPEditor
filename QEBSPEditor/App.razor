@using Blazor.DownloadFileFast.Interfaces
@using QEBSPEditor.Components.BSPEditor
@using QEBSPEditor.Core
@using QEBSPEditor.Models
@using QEBSPEditor.Models.BSPFiles
@inject DialogService DialogService
@inject IBlazorDownloadFileService BlazorDownloadFileService
@inject ApplicationSettingsService ApplicationSettingsService
@inject ThemeService ThemeService
@inject AlertDialogsService AlertDialogs
@inject BSPService BSPService

<RadzenDialog />
<ApplicationSettingsWatcher SettingsChange="OnSettingsChangedAsync" />

<EdMainLayout>
    <Body>
        @if (_bsp is not null)
        {
            <CascadingValue Value="_bsp">
                <BSPEditor BSP="_bsp" />
            </CascadingValue>
        }
    </Body>

    <Sidebar>
        <EdSidebarTitle Title="QEBSPEditor" />

        @if (_bsp is not null)
        {
            <EdSidebarText Title="Name" Text="@_bsp.Name" />
            <EdSidebarText Title="Type" Text="@_bsp.VersionName">
                <EdHelpIcon Click="() => CapabilitiesDialog.OpenAsync(DialogService, _bsp)" />
            </EdSidebarText>
        }

        <EdSidebarMenu>
            <EdSidebarItem Text="Load..." Icon="file_upload" Click="OpenLoadDialogAsync" />
            <EdSidebarItem Text="Save" Icon="file_download" Click="() => BSPService.SaveAsync(_bsp!)" Visible="@(_bsp?.Capabilities.HasFlag(BSPCapabilities.Saveable) ?? false)" />
            <EdSidebarItem Text="Settings" Icon="settings" Click="() => SettingsDialog.OpenAsync(DialogService)" />
            <EdSidebarItem Text="About" Icon="contact_support" Click="() => AboutDialog.OpenAsync(DialogService)" />
        </EdSidebarMenu>
    </Sidebar>
</EdMainLayout>

@code {
    private IBSPFile? _bsp;

    protected override async Task OnInitializedAsync()
    {
        await ApplicationSettingsService.LoadAsync();
    }

    private async void OnSettingsChangedAsync(ApplicationSettings settings)
    {
        await ThemeService.ChangeThemeAsync(settings.Theme);
        StateHasChanged();
    }

    private async Task OpenLoadDialogAsync()
    {
        var bsp = await BSPLoadDialog.OpenAsync(DialogService);

        if (bsp is not null)
        {
            _bsp = bsp;

            if (bsp is BSPFileGeneric)
            {
                StateHasChanged();
                await AlertDialogs.WarningAsync("Generic BSP loaded", "This BSP version is not supported by QEBSPEditor, however it was possible to load it as a \"Generic BSP\".\nThis is a best-effort feature and there's no guarantee of things actually working. Thread carefully.");
            }
        }
    }
}