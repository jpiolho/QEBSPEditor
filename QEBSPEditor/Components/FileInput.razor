@using Tewr.Blazor.FileReader;
@inject IFileReaderService FileReaderService

<div class="@(_isLoading ? "visually-hidden" : "")">
    <input @ref="_input" type="file" @onchange="LoadFileAsync" />
</div>

@if (_isLoading)
{
    <div class="d-flex justify-content-center">
        <Spinner />
    </div>
}

@code {
    public class FileLoadEventArgs
    {
        public required IFileInfo Info { get; init; }
        public required MemoryStream Stream { get; init; }
    }

    [Parameter] public EventCallback<FileLoadEventArgs> FileLoad { get; set; }

    private ElementReference _input;
    private bool _isLoading;

    private async Task LoadFileAsync()
    {
        _isLoading = true;
        StateHasChanged();

        try
        {
            var file = (await FileReaderService.CreateReference(_input).EnumerateFilesAsync()).FirstOrDefault();

            if (file is null)
                return;

            var info = await file.ReadFileInfoAsync();

            using (var memoryStream = await file.CreateMemoryStreamAsync(4096))
            {
                await FileLoad.InvokeAsync(new()
                    {
                        Info = info,
                        Stream = memoryStream
                    });
            }
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }
}